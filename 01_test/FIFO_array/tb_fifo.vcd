$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module tb_fifo $end
   $var wire 32 E DATA_WIDTH [31:0] $end
   $var wire 32 E SIZE_DEPTH [31:0] $end
   $var wire 32 F ADDR_WIDTH [31:0] $end
   $var wire 1 B i_clk $end
   $var wire 1 # i_rst_n $end
   $var wire 1 $ i_wr_en $end
   $var wire 1 % i_rd_en $end
   $var wire 8 & i_data [7:0] $end
   $var wire 8 1 o_data [7:0] $end
   $var wire 1 < o_full $end
   $var wire 1 = o_empty $end
   $var wire 8 G value_wr[0] [7:0] $end
   $var wire 8 H value_wr[1] [7:0] $end
   $var wire 8 I value_wr[2] [7:0] $end
   $var wire 8 J value_wr[3] [7:0] $end
   $var wire 8 K value_wr[4] [7:0] $end
   $var wire 8 L value_wr[5] [7:0] $end
   $var wire 8 M value_wr[6] [7:0] $end
   $var wire 8 N value_wr[7] [7:0] $end
   $var wire 8 ' value_rd[0] [7:0] $end
   $var wire 8 ( value_rd[1] [7:0] $end
   $var wire 8 ) value_rd[2] [7:0] $end
   $var wire 8 * value_rd[3] [7:0] $end
   $var wire 8 + value_rd[4] [7:0] $end
   $var wire 8 , value_rd[5] [7:0] $end
   $var wire 8 - value_rd[6] [7:0] $end
   $var wire 8 . value_rd[7] [7:0] $end
   $var wire 32 / count_wr [31:0] $end
   $var wire 32 0 count_rd [31:0] $end
   $var wire 32 O match_count [31:0] $end
   $scope module uut $end
    $var wire 32 E SIZE_DATA [31:0] $end
    $var wire 32 E SIZE_DEPTH [31:0] $end
    $var wire 1 B i_clk $end
    $var wire 1 # i_rst_n $end
    $var wire 1 $ i_wr_en $end
    $var wire 1 % i_rd_en $end
    $var wire 8 & i_data [7:0] $end
    $var wire 8 1 o_data [7:0] $end
    $var wire 1 < o_full $end
    $var wire 1 = o_empty $end
    $var wire 32 F SIZE_ADDR [31:0] $end
    $var wire 4 > ptr_wr [3:0] $end
    $var wire 4 ? ptr_rd [3:0] $end
    $var wire 4 C n_ptr_wr [3:0] $end
    $var wire 4 D n_ptr_rd [3:0] $end
    $var wire 1 2 update_wr $end
    $var wire 1 3 update_rd $end
    $scope module memory_array $end
     $var wire 32 E SIZE_DATA [31:0] $end
     $var wire 32 E SIZE_DEPTH [31:0] $end
     $var wire 32 F SIZE_ADDR [31:0] $end
     $var wire 1 2 i_wr_en $end
     $var wire 1 3 i_rd_en $end
     $var wire 3 @ i_addr_wr [2:0] $end
     $var wire 3 A i_adder_rd [2:0] $end
     $var wire 8 & i_data [7:0] $end
     $var wire 8 1 o_data [7:0] $end
     $var wire 8 4 mem[0] [7:0] $end
     $var wire 8 5 mem[1] [7:0] $end
     $var wire 8 6 mem[2] [7:0] $end
     $var wire 8 7 mem[3] [7:0] $end
     $var wire 8 8 mem[4] [7:0] $end
     $var wire 8 9 mem[5] [7:0] $end
     $var wire 8 : mem[6] [7:0] $end
     $var wire 8 ; mem[7] [7:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
b00000000 &
b00000000 '
b00000000 (
b00000000 )
b00000000 *
b00000000 +
b00000000 ,
b00000000 -
b00000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000 1
02
03
b00000000 4
b00000000 5
b00000000 6
b00000000 7
b00000000 8
b00000000 9
b00000000 :
b00000000 ;
0<
1=
b0000 >
b0000 ?
b000 @
b000 A
0B
b0000 C
b0000 D
b00000000000000000000000000001000 E
b00000000000000000000000000000011 F
b00000000 G
b00000000 H
b00000000 I
b00000000 J
b00000000 K
b00000000 L
b00000000 M
b00000000 N
b00000000000000000000000000000000 O
#5
1B
#10
1#
0B
#15
1B
#20
0B
#25
1$
b00101001 &
b00101001 1
12
b00101001 4
b00101001 5
0=
b0001 >
b001 @
1B
b0010 C
#30
0B
#35
0#
0$
02
1=
b0000 >
b000 @
1B
b0000 C
#40
0B
#45
1B
#50
0B
#55
1#
1B
#60
0B
#65
1$
b11000100 &
b11000100 1
12
b11000100 4
b11000100 5
0=
b0001 >
b001 @
1B
b0010 C
#70
0B
#75
b11000100 6
b0010 >
b010 @
1B
b0011 C
#80
0B
#85
b10011100 &
b10011100 1
b10011100 6
b10011100 7
b0011 >
b011 @
1B
b0100 C
#90
0B
#95
b10011100 8
b0100 >
b100 @
1B
b0101 C
#100
0B
#105
b00000010 &
b00000010 1
b00000010 8
b00000010 9
b0101 >
b101 @
1B
b0110 C
#110
0B
#115
b00000010 :
b0110 >
b110 @
1B
b0111 C
#120
0B
#125
b11100100 &
b11100100 1
b11100100 :
b11100100 ;
b0111 >
b111 @
1B
b1000 C
#130
0B
#135
02
1<
b1000 >
b000 @
1B
#140
0B
#145
b01111000 &
b01111000 1
1B
#150
0B
#155
1B
#160
0B
#165
b10111100 &
b10111100 1
1B
#170
0B
#175
1B
#180
0B
#185
b10110110 &
b10110110 1
1B
#190
0B
#195
1B
#200
0B
#205
b11100100 &
b11100100 1
1B
#210
0B
#215
1B
#220
0B
#225
b10110111 &
b10110111 1
1B
#230
0B
#235
0$
1B
#240
0B
#245
1%
b11000100 1
13
0<
b0001 ?
b001 A
1B
b0010 D
#250
0B
#255
b11000100 '
b00000000000000000000000000000001 0
b10011100 1
b0010 ?
b010 A
1B
b0011 D
#260
0B
#265
b0011 ?
b011 A
1B
b0100 D
#270
0B
#275
b10011100 (
b00000000000000000000000000000010 0
b00000010 1
b0100 ?
b100 A
1B
b0101 D
#280
0B
#285
b0101 ?
b101 A
1B
b0110 D
#290
0B
#295
b00000010 )
b00000000000000000000000000000011 0
b11100100 1
b0110 ?
b110 A
1B
b0111 D
#300
0B
#305
b0111 ?
b111 A
1B
b1000 D
#310
0B
#315
b11100100 *
b00000000000000000000000000000100 0
b10110111 1
03
1=
b1000 ?
b000 A
1B
#320
0B
#325
1B
#330
0B
#335
b10110111 +
b00000000000000000000000000000101 0
1B
#340
0B
#345
1B
#350
0B
#355
b10110111 ,
b00000000000000000000000000000110 0
1B
#360
0B
#365
1B
#370
0B
#375
b10110111 -
b00000000000000000000000000000111 0
1B
#380
0B
#385
1B
#390
0B
#395
0%
b10110111 .
b00000000000000000000000000001000 0
1B
#400
0B
#405
1B
#410
0B
#415
0#
b0000 >
b0000 ?
1B
b0000 C
b0000 D
#420
0B
#425
1B
#430
0B
#435
1#
1B
#440
0B
#445
1B
#450
0B
#455
1$
b00011101 &
b00011101 1
12
b00011101 4
b00011101 5
0=
b0001 >
b001 @
1B
b0010 C
#460
0B
#465
1%
b00011110 &
b00011110 1
13
b00011110 5
b00011110 6
b0010 >
b0001 ?
b010 @
b001 A
1B
b0011 C
b0010 D
#470
0B
#475
b00011111 &
b00011111 1
b00011111 6
b00011111 7
b0011 >
b0010 ?
b011 @
b010 A
1B
b0100 C
b0011 D
#480
0B
#485
b00100000 &
b00100000 1
b00100000 7
b00100000 8
b0100 >
b0011 ?
b100 @
b011 A
1B
b0101 C
b0100 D
#490
0B
#495
b00100001 &
b00100001 1
b00100001 8
b00100001 9
b0101 >
b0100 ?
b101 @
b100 A
1B
b0110 C
b0101 D
#500
0B
#505
b00100001 :
b0110 >
b0101 ?
b110 @
b101 A
1B
b0111 C
b0110 D
#510
0B
#515
0#
03
b00100001 4
1=
b0000 >
b0000 ?
b000 @
b000 A
1B
b0001 C
b0000 D
#520
0B
#525
1B
#530
0B
#535
1#
13
b00100001 5
0=
b0001 >
b001 @
1B
b0010 C
b0001 D
#540
0B
#545
0%
03
b00100001 6
b0010 >
b010 @
1B
b0011 C
b0000 D
#550
0B
#555
b01010011 &
b01010011 1
b01010011 6
b01010011 7
b0011 >
b011 @
1B
b0100 C
#560
0B
#565
b00100001 &
b00100001 1
b00100001 7
b0100 >
b100 @
1B
b0101 C
#570
0B
#575
b11100001 &
b11100001 1
b11100001 8
b11100001 9
b0101 >
b101 @
1B
b0110 C
#580
0B
#585
b11000101 &
b11000101 1
b11000101 9
b11000101 :
b0110 >
b110 @
1B
b0111 C
#590
0B
#595
b10000010 &
b10000010 1
b10000010 :
b10000010 ;
b0111 >
b111 @
1B
b1000 C
#600
0B
#605
b01100010 &
b01100010 1
02
b01100010 ;
1<
b1000 >
b000 @
1B
#610
0B
#615
b00110101 &
b00110101 1
1B
#620
0B
#625
0$
1%
b00100001 1
13
0<
b0001 ?
b001 A
1B
b0010 D
#630
0B
#635
b01010011 1
b0010 ?
b010 A
1B
b0011 D
#640
0B
#645
b00100001 1
b0011 ?
b011 A
1B
b0100 D
#650
0B
#655
b11100001 1
b0100 ?
b100 A
1B
b0101 D
#660
0B
#665
b11000101 1
b0101 ?
b101 A
1B
b0110 D
#670
0B
#675
b10000010 1
b0110 ?
b110 A
1B
b0111 D
#680
0B
#685
b01100010 1
b0111 ?
b111 A
1B
b1000 D
#690
0B
#695
b00110101 1
03
1=
b1000 ?
b000 A
1B
#700
0B
#705
1B
#710
0B
#715
1B
#720
0B
#725
1B
#730
0B
#735
1B
#740
0B
#745
1B
#750
0B
#755
1B
#760
0B
#765
1B
#770
0B
#775
1B
#780
0B
#785
1B
#790
0B
#795
1B
#800
0B
#805
1B
#810
0B
#815
1B
#820
0B
#825
1B
#830
0B
#835
1B
#840
0B
#845
1B
#850
0B
#855
1B
#860
0B
#865
1B
#870
0B
#875
1B
#880
0B
#885
1B
#890
0B
#895
1B
#900
0B
#905
1B
