$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module tb_fifo $end
   $var wire 32 E DATA_WIDTH [31:0] $end
   $var wire 32 E SIZE_DEPTH [31:0] $end
   $var wire 32 F ADDR_WIDTH [31:0] $end
   $var wire 1 @ i_clk $end
   $var wire 1 # i_rst_n $end
   $var wire 1 $ i_wr_en $end
   $var wire 1 % i_rd_en $end
   $var wire 8 & i_data [7:0] $end
   $var wire 8 1 o_data [7:0] $end
   $var wire 1 : o_full $end
   $var wire 1 ; o_empty $end
   $var wire 8 G value_wr[0] [7:0] $end
   $var wire 8 H value_wr[1] [7:0] $end
   $var wire 8 I value_wr[2] [7:0] $end
   $var wire 8 J value_wr[3] [7:0] $end
   $var wire 8 K value_wr[4] [7:0] $end
   $var wire 8 L value_wr[5] [7:0] $end
   $var wire 8 M value_wr[6] [7:0] $end
   $var wire 8 N value_wr[7] [7:0] $end
   $var wire 8 ' value_rd[0] [7:0] $end
   $var wire 8 ( value_rd[1] [7:0] $end
   $var wire 8 ) value_rd[2] [7:0] $end
   $var wire 8 * value_rd[3] [7:0] $end
   $var wire 8 + value_rd[4] [7:0] $end
   $var wire 8 , value_rd[5] [7:0] $end
   $var wire 8 - value_rd[6] [7:0] $end
   $var wire 8 . value_rd[7] [7:0] $end
   $var wire 32 / count_wr [31:0] $end
   $var wire 32 0 count_rd [31:0] $end
   $var wire 32 O match_count [31:0] $end
   $scope module uut $end
    $var wire 32 E SIZE_DEPTH [31:0] $end
    $var wire 32 E SIZE_DATA [31:0] $end
    $var wire 1 @ i_clk $end
    $var wire 1 # i_rst_n $end
    $var wire 1 $ i_wr_en $end
    $var wire 1 % i_rd_en $end
    $var wire 8 & i_data [7:0] $end
    $var wire 8 1 o_data [7:0] $end
    $var wire 1 : o_full $end
    $var wire 1 ; o_empty $end
    $var wire 32 F SIZE_ADDR [31:0] $end
    $var wire 4 < ptr_wr [3:0] $end
    $var wire 4 = ptr_rd [3:0] $end
    $var wire 4 A n_ptr_wr [3:0] $end
    $var wire 4 B n_ptr_rd [3:0] $end
    $var wire 1 C update_wr $end
    $var wire 1 D update_rd $end
    $scope module RAM $end
     $var wire 32 E SIZE_DATA [31:0] $end
     $var wire 32 F SIZE_ADDR [31:0] $end
     $var wire 32 E SIZE_DEPTH [31:0] $end
     $var wire 1 @ i_clk $end
     $var wire 1 $ i_wr_en $end
     $var wire 1 % i_rd_en $end
     $var wire 3 > i_addr_wr [2:0] $end
     $var wire 3 ? i_addr_rd [2:0] $end
     $var wire 8 & i_data [7:0] $end
     $var wire 8 1 o_data [7:0] $end
     $var wire 8 2 mem[0] [7:0] $end
     $var wire 8 3 mem[1] [7:0] $end
     $var wire 8 4 mem[2] [7:0] $end
     $var wire 8 5 mem[3] [7:0] $end
     $var wire 8 6 mem[4] [7:0] $end
     $var wire 8 7 mem[5] [7:0] $end
     $var wire 8 8 mem[6] [7:0] $end
     $var wire 8 9 mem[7] [7:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
b00000000 &
b00000000 '
b00000000 (
b00000000 )
b00000000 *
b00000000 +
b00000000 ,
b00000000 -
b00000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000 1
b00000000 2
b00000000 3
b00000000 4
b00000000 5
b00000000 6
b00000000 7
b00000000 8
b00000000 9
0:
1;
b0000 <
b0000 =
b000 >
b000 ?
0@
b0000 A
b0000 B
0C
0D
b00000000000000000000000000001000 E
b00000000000000000000000000000011 F
b00000000 G
b00000000 H
b00000000 I
b00000000 J
b00000000 K
b00000000 L
b00000000 M
b00000000 N
b00000000000000000000000000000000 O
#5
1@
#10
1#
0@
#15
1@
#20
0@
#25
1$
b00101001 &
b00101001 1
b00101001 2
0;
b0001 <
b001 >
1@
b0010 A
1C
#30
0@
#35
0#
0$
1;
b0000 <
b000 >
1@
b0000 A
0C
#40
0@
#45
1@
#50
0@
#55
1#
1@
#60
0@
#65
1$
b11000100 &
b11000100 1
b11000100 2
0;
b0001 <
b001 >
1@
b0010 A
1C
#70
0@
#75
b11000100 3
b0010 <
b010 >
1@
b0011 A
#80
0@
#85
b10011100 &
b10011100 1
b10011100 4
b0011 <
b011 >
1@
b0100 A
#90
0@
#95
b10011100 5
b0100 <
b100 >
1@
b0101 A
#100
0@
#105
b00000010 &
b00000010 1
b00000010 6
b0101 <
b101 >
1@
b0110 A
#110
0@
#115
b00000010 7
b0110 <
b110 >
1@
b0111 A
#120
0@
#125
b11100100 &
b11100100 1
b11100100 8
b0111 <
b111 >
1@
b1000 A
#130
0@
#135
b11100100 9
1:
b1000 <
b000 >
1@
0C
#140
0@
#145
b01111000 &
b01111000 1
b01111000 2
1@
#150
0@
#155
1@
#160
0@
#165
b10111100 &
b10111100 1
b10111100 2
1@
#170
0@
#175
1@
#180
0@
#185
b10110110 &
b10110110 1
b10110110 2
1@
#190
0@
#195
1@
#200
0@
#205
b11100100 &
b11100100 1
b11100100 2
1@
#210
0@
#215
1@
#220
0@
#225
b10110111 &
b10110111 1
b10110111 2
1@
#230
0@
#235
0$
1@
#240
0@
#245
1%
0:
b0001 =
b001 ?
1@
b0010 B
1D
#250
0@
#255
b10110111 '
b00000000000000000000000000000001 0
b11000100 1
b0010 =
b010 ?
1@
b0011 B
#260
0@
#265
b10011100 1
b0011 =
b011 ?
1@
b0100 B
#270
0@
#275
b10011100 (
b00000000000000000000000000000010 0
b0100 =
b100 ?
1@
b0101 B
#280
0@
#285
b00000010 1
b0101 =
b101 ?
1@
b0110 B
#290
0@
#295
b00000010 )
b00000000000000000000000000000011 0
b0110 =
b110 ?
1@
b0111 B
#300
0@
#305
b11100100 1
b0111 =
b111 ?
1@
b1000 B
#310
0@
#315
b11100100 *
b00000000000000000000000000000100 0
1;
b1000 =
b000 ?
1@
0D
#320
0@
#325
b10110111 1
1@
#330
0@
#335
b10110111 +
b00000000000000000000000000000101 0
1@
#340
0@
#345
1@
#350
0@
#355
b10110111 ,
b00000000000000000000000000000110 0
1@
#360
0@
#365
1@
#370
0@
#375
b10110111 -
b00000000000000000000000000000111 0
1@
#380
0@
#385
1@
#390
0@
#395
0%
b10110111 .
b00000000000000000000000000001000 0
1@
#400
0@
#405
1@
#410
0@
#415
0#
b0000 <
b0000 =
1@
b0000 A
b0000 B
#420
0@
#425
1@
#430
0@
#435
1#
1@
#440
0@
#445
1@
#450
0@
#455
1$
b00011101 &
b00011101 1
b00011101 2
0;
b0001 <
b001 >
1@
b0010 A
1C
#460
0@
#465
1%
b00011110 &
b00011110 3
b0010 <
b0001 =
b010 >
b001 ?
1@
b0011 A
b0010 B
1D
#470
0@
#475
b00011111 &
b00011110 1
b00011111 4
b0011 <
b0010 =
b011 >
b010 ?
1@
b0100 A
b0011 B
#480
0@
#485
b00100000 &
b00011111 1
b00100000 5
b0100 <
b0011 =
b100 >
b011 ?
1@
b0101 A
b0100 B
#490
0@
#495
b00100001 &
b00100000 1
b00100001 6
b0101 <
b0100 =
b101 >
b100 ?
1@
b0110 A
b0101 B
#500
0@
#505
b00100001 1
b00100001 7
b0110 <
b0101 =
b110 >
b101 ?
1@
b0111 A
b0110 B
#510
0@
#515
0#
b00100001 8
1;
b0000 <
b0000 =
b000 >
b000 ?
1@
b0001 A
b0000 B
0D
#520
0@
#525
b00011101 1
b00100001 2
1@
#530
0@
#535
1#
b00100001 1
0;
b0001 <
b001 >
1@
b0010 A
b0001 B
1D
#540
0@
#545
0%
b00100001 3
b0010 <
b010 >
1@
b0011 A
b0000 B
0D
#550
0@
#555
b01010011 &
b01010011 1
b01010011 4
b0011 <
b011 >
1@
b0100 A
#560
0@
#565
b00100001 &
b00100001 1
b00100001 5
b0100 <
b100 >
1@
b0101 A
#570
0@
#575
b11100001 &
b11100001 1
b11100001 6
b0101 <
b101 >
1@
b0110 A
#580
0@
#585
b11000101 &
b11000101 1
b11000101 7
b0110 <
b110 >
1@
b0111 A
#590
0@
#595
b10000010 &
b10000010 1
b10000010 8
b0111 <
b111 >
1@
b1000 A
#600
0@
#605
b01100010 &
b01100010 1
b01100010 9
1:
b1000 <
b000 >
1@
0C
#610
0@
#615
b00110101 &
b00110101 1
b00110101 2
1@
#620
0@
#625
0$
1%
0:
b0001 =
b001 ?
1@
b0010 B
1D
#630
0@
#635
b00100001 1
b0010 =
b010 ?
1@
b0011 B
#640
0@
#645
b01010011 1
b0011 =
b011 ?
1@
b0100 B
#650
0@
#655
b00100001 1
b0100 =
b100 ?
1@
b0101 B
#660
0@
#665
b11100001 1
b0101 =
b101 ?
1@
b0110 B
#670
0@
#675
b11000101 1
b0110 =
b110 ?
1@
b0111 B
#680
0@
#685
b10000010 1
b0111 =
b111 ?
1@
b1000 B
#690
0@
#695
b01100010 1
1;
b1000 =
b000 ?
1@
0D
#700
0@
#705
b00110101 1
1@
#710
0@
#715
1@
#720
0@
#725
1@
#730
0@
#735
1@
#740
0@
#745
1@
#750
0@
#755
1@
#760
0@
#765
1@
#770
0@
#775
1@
#780
0@
#785
1@
#790
0@
#795
1@
#800
0@
#805
1@
#810
0@
#815
1@
#820
0@
#825
1@
#830
0@
#835
1@
#840
0@
#845
1@
#850
0@
#855
1@
#860
0@
#865
1@
#870
0@
#875
1@
#880
0@
#885
1@
#890
0@
#895
1@
#900
0@
#905
1@
